# == DO NOT EDIT THE FOLLOWING LINES for the Raspberry Pi Pico VS Code Extension to work ==
if(WIN32)
    set(USERHOME $ENV{USERPROFILE})
else()
    set(USERHOME $ENV{HOME})
endif()
set(sdkVersion 2.2.0)
set(toolchainVersion 14_2_Rel1)
set(picotoolVersion 2.2.0)
set(picoVscode ${USERHOME}/.pico-sdk/cmake/pico-vscode.cmake)
if (EXISTS ${picoVscode})
    include(${picoVscode})
endif()
# ====================================================================================
# Generated Cmake Pico project file
cmake_minimum_required(VERSION 3.13)

set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# == DO NOT EDIT (VS Code extension) ==
if(WIN32)
    set(USERHOME $ENV{USERPROFILE})
else()
    set(USERHOME $ENV{HOME})
endif()
set(sdkVersion 2.2.0)
set(toolchainVersion 14_2_Rel1)
set(picotoolVersion 2.2.0)
set(picoVscode ${USERHOME}/.pico-sdk/cmake/pico-vscode.cmake)
if (EXISTS ${picoVscode})
    include(${picoVscode})
endif()
# =====================================
set(PICO_BOARD pico_w CACHE STRING "Board type")

include(pico_sdk_import.cmake)
project(Teste_Queda C CXX ASM)
pico_sdk_init()

add_executable(Teste_Queda Teste_Queda.c)

pico_set_program_name(Teste_Queda "Teste_Queda")
pico_set_program_version(Teste_Queda "0.1")

# Sa√≠da stdio: desliga UART, liga USB
pico_enable_stdio_uart(Teste_Queda 0)
pico_enable_stdio_usb(Teste_Queda 1)  # <<< ATIVAR USB CDC

# Bibliotecas
target_link_libraries(Teste_Queda
    pico_stdlib
    hardware_i2c
    hardware_pwm
    hardware_gpio
)

target_include_directories(Teste_Queda PRIVATE
    ${CMAKE_CURRENT_LIST_DIR}
)

# (Removi o bloco duplicado de target_link_libraries vazio)

pico_add_extra_outputs(Teste_Queda)
